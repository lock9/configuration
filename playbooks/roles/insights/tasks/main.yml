--- 
- 
  name: "setup the insights env file"
  tags: 
    - install
    - "install:configuration"
  template: 
    dest: "{{ insights_app_dir }}/insights_env"
    group: "{{ insights_user }}"
    mode: 420
    owner: "{{ insights_user }}"
    src: edx/app/insights/insights_env.j2
- 
  become_user: "{{ insights_user }}"
  name: "install application requirements"
  pip: 
    extra_args: "--exists-action w"
    requirements: "{{ insights_requirements_base }}/{{ item }}"
    state: present
    virtualenv: "{{ insights_venv_dir }}"
    virtualenv_python: python3.8
  tags: 
    - install
    - "install:app-requirements"
  with_items: "{{ insights_requirements }}"
- 
  become_user: "{{ insights_user }}"
  name: "create nodeenv"
  shell: "{{ insights_venv_dir }}/bin/nodeenv {{ insights_nodeenv_dir }}  --node={{ INSIGHTS_NODE_VERSION }} --prebuilt --force"
  tags: 
    - install
    - "install:system-requirements"
- 
  become_user: "{{ insights_user }}"
  command: "npm install -g npm@{{ INSIGHTS_NPM_VERSION }}"
  environment: "{{ insights_environment }}"
  name: "upgrade npm"
  tags: 
    - install
    - "install:system-requirements"
- 
  args: 
    chdir: "{{ insights_code_dir }}"
  become_user: "{{ insights_user }}"
  environment: "{{ insights_environment }}"
  name: "install node dependencies"
  shell: "{{ insights_nodeenv_bin }}/npm install"
  tags: 
    - install
    - "install:app-requirements"
- 
  args: 
    chdir: "{{ insights_code_dir }}"
  become_user: "{{ insights_user }}"
  environment: "{{ insights_environment }}"
  name: migrate
  run_once: true
  shell: "DB_MIGRATION_USER='{{ COMMON_MYSQL_MIGRATE_USER }}' DB_MIGRATION_PASS='{{ COMMON_MYSQL_MIGRATE_PASS }}' {{ insights_venv_dir }}/bin/python {{ insights_manage }} migrate --noinput"
  tags: 
    - migrate
    - "migrate:db"
  when: "migrate_db is defined and migrate_db|lower == \"yes\""
- 
  args: 
    chdir: "{{ insights_code_dir }}"
  become_user: "{{ insights_user }}"
  environment: "{{ insights_environment }}"
  name: "run webpack"
  shell: ". {{ insights_nodeenv_bin }}/activate && {{ insights_node_bin }}/webpack --config webpack.prod.config.js"
  tags: 
    - assets
    - "assets:gather"
- 
  args: 
    chdir: "{{ insights_code_dir }}"
  become_user: "{{ insights_user }}"
  environment: "{{ insights_environment }}"
  name: "run collectstatic"
  shell: "{{ insights_venv_dir }}/bin/python {{ insights_manage }} {{ item }}"
  tags: 
    - assets
    - "assets:gather"
  with_items: 
    - "collectstatic --noinput"
- 
  name: "write out the supervisior wrapper"
  tags: 
    - install
    - "install:configuration"
  template: 
    dest: "{{ insights_app_dir }}/{{ insights_service_name }}.sh"
    group: "{{ common_web_user }}"
    mode: 424
    owner: "{{ supervisor_user }}"
    src: edx/app/insights/insights.sh.j2
- 
  name: "write supervisord config"
  tags: 
    - install
    - "install:configuration"
  template: 
    dest: "{{ supervisor_available_dir }}/{{ insights_service_name }}.conf"
    group: "{{ common_web_user }}"
    mode: 420
    owner: "{{ supervisor_user }}"
    src: edx/app/supervisor/conf.d.available/insights.conf.j2
- 
  file: 
    dest: "{{ supervisor_cfg_dir }}/{{ insights_service_name }}.conf"
    force: true
    src: "{{ supervisor_available_dir }}/{{ insights_service_name }}.conf"
    state: link
  name: "enable supervisor script"
  tags: 
    - install
    - "install:configuration"
  when: "not disable_edx_services"
- 
  name: "update supervisor configuration"
  shell: "{{ supervisor_ctl }} -c {{ supervisor_cfg }} update"
  tags: 
    - manage
    - "manage:start"
  when: "not disable_edx_services"
- 
  file: 
    dest: "{{ COMMON_BIN_DIR }}/manage.{{ insights_service_name }}"
    src: "{{ insights_manage }}"
    state: link
  name: "create manage.py symlink"
  tags: 
    - install
    - "install:base"
- 
  become_user: "{{ supervisor_service_user }}"
  name: "restart insights"
  supervisorctl: 
    config: "{{ supervisor_cfg }}"
    name: "{{ insights_service_name }}"
    state: restarted
    supervisorctl_path: "{{ supervisor_ctl }}"
  tags: 
    - "manage:start"
  when: "not disable_edx_services"
